# This Dockerfile is for integration testing in CI, see .github/workflows/tests.yml
# Run with --build-arg=channel=stable OR --build-arg=channel=nightly (default)
ARG distro=archlinux

# Using Dockerfile conditionals
#### ARCH LINUX base image
FROM archlinux:base-devel AS ego-base-archlinux
RUN pacman --noconfirm -Sy cargo acl systemd

#### UBUNTU base image
FROM ubuntu:latest AS ego-base-ubuntu
RUN apt-get update && \
    apt-get install -y cargo libacl1-dev systemd systemd-container sudo && \
    rm -rf /var/lib/apt/lists/*

#### FEDORA base image
FROM fedora:latest AS ego-base-fedora
RUN yum install -y cargo libacl-devel systemd systemd-container && \
    yum clean all && \
    rm -rf /var/cache/yum

#### Common logic for base image
FROM ego-base-$distro AS cargo-build

WORKDIR /root/build
# Make warnings fatal
ENV RUSTFLAGS="-D warnings"

# Build Cargo dependencies for cache
COPY Cargo.toml Cargo.lock ./
RUN mkdir src/ && \
	echo "pub fn main() {println!(\"dummy function\")}" > src/main.rs && \
	cargo build --bins --tests --color=always && \
	rm -rdv target/*/deps/ego-* \
	        target/*/.fingerprint/ego-*

# Do the actual build
COPY src src
RUN cargo install --root=/usr/local --path . --color=always

RUN useradd ego --uid 155 --create-home && \
    useradd user --create-home && \
    mkdir -m 0700 -p /run/user/0 && \
    echo root:root | chpasswd
# TODO: Get rid of XDG_RUNTIME_DIR requirement for command-line-only usage? (see #29)
ENV XDG_RUNTIME_DIR=/run/user/0

# From https://www.brad-x.com/2014/12/27/running-systemd-within-a-docker-image/
RUN systemctl mask swap.target
#RUN systemctl disable graphical.target; systemctl enable multi-user.target
RUN mkdir -p /etc/systemd/system/console-getty.service.d
COPY varia/console-getty-override.conf /etc/systemd/system/console-getty.service.d/override.conf
RUN echo -e '[Journal]\nStorage=none' > /etc/systemd/journald.conf
